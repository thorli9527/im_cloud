syntax = "proto3";

package protocol.message;

import "common.proto"; // 引入公共类型，如 UserProfile、MediaMeta 可自定义

// ======================================
// 💬 会话场景类型
// ======================================
enum ChatScene {
  CHAT_UNKNOWN = 0; // 默认未知场景（防御值）
  SINGLE = 1;       // 单人会话
  GROUP = 2;        // 群聊会话
}

// ======================================
// 😄 Emoji 类型定义（标准 + 自定义）
// ======================================
enum EmojiType {
  EMOJI_UNKNOWN = 0;
  SMILE = 1;
  GRIN = 2;
  TEARS = 3;
  STUCK_OUT_TONGUE = 4;
  CLAP = 25;
  POOP = 28;
  HEART = 21;
  // ... 可继续扩展标准 Emoji
  CUSTOM_EMOJI = 1000; // 自定义表情（通过图片 URL 指定）
}

// ======================================
// 📨 顶层消息结构
// ======================================
message Content {
  string message_id = 1;              // 唯一消息 ID（客户端生成或服务端补全）
  string sender_id = 2;               // 消息发送方
  string receiver_id = 3;             // 消息接收方（单聊为对方 ID，群聊为群 ID）
  int64 timestamp = 4;                // 消息发送时间（毫秒时间戳）

  common.ContentType message_type = 5;       // 主消息类型（用于快速渲染判断）
  ChatScene scene = 6;                // 消息所属会话类型（单聊/群聊）

  repeated MessageContent contents = 10; // 多段复合内容（如文本 + 图片）
}

// ======================================
// 💠 消息内容结构（oneof 类型）
// ======================================
message MessageContent {
  oneof content {
    TextContent text = 1;
    ImageContent image = 2;
    AudioContent audio = 3;
    VideoContent video = 4;
    LocationContent location = 5;
    FileContent file = 6;
    AVCallContent av_call = 7;
    CustomContent custom = 8;
    EmojiContent emoji = 9;
    RevokeContent revoke = 10;
    ForwardContent forward = 11;
    QuoteContent quote = 12;
    HtmlContent html = 13;
    VoipContent voip = 14;
    NotificationContent notification = 15;
    SystemContent system = 16;
    ReminderContent reminder = 17;
    GroupEventContent group_event = 18;
    ContactCardContent contact_card = 19;
    VoteContent vote = 20;
    RedEnvelopeContent red_envelope = 21;
  }
}



// ===============================
// 📄 文本消息
// ===============================
message TextContent {
  string text = 1;                      // 文本主体内容
  repeated InlineEntity entities = 2;  // 富文本实体，如链接/@用户/话题
}

message InlineEntity {
  int32 start = 1;                     // 起始位置（UTF-8 字符索引）
  int32 end = 2;                       // 结束位置（不含）
  string type = 3;                     // 类型：link / mention / hashtag
  string value = 4;                    // 附加值：URL、用户ID等
}

// ===============================
// 🖼️ 图片消息
// ===============================
message ImageContent {
  string url = 1;                      // 原图 URL
  string thumbnail_url = 2;           // 缩略图 URL
  int32 width = 3;                     // 宽度（像素）
  int32 height = 4;                    // 高度（像素）
  string format = 5;                   // 格式（如 jpg/png）
  int64 size = 6;                      // 文件大小（字节）
}

// ===============================
// 🔊 音频消息
// ===============================
message AudioContent {
  string url = 1;
  int32 duration = 2;
  string format = 3;
  int64 size = 4;
  bool is_voice = 5;                   // 是否语音（vs 音乐类音频）
}

// ===============================
// 🎞️ 视频消息
// ===============================
message VideoContent {
  string url = 1;
  int32 duration = 2;
  string cover_url = 3;
  int32 width = 4;
  int32 height = 5;
  string format = 6;
  int64 size = 7;
}

// ===============================
// 📍 位置消息
// ===============================
message LocationContent {
  double latitude = 1;
  double longitude = 2;
  string address = 3;
  string poi_name = 4;
  string thumbnail_url = 5;
}

// ===============================
// 📁 文件消息
// ===============================
message FileContent {
  string url = 1;
  string name = 2;
  int64 size = 3;
  string file_type = 4;
  string icon_url = 5;
}

// ===============================
// 📞 音视频通话信令
// ===============================
message AVCallContent {
  string call_id = 1;
  string initiator_id = 2;
  repeated string participant_ids = 3;
  enum CallAction {
    UNKNOWN = 0;
    INVITE = 1;
    ACCEPT = 2;
    REJECT = 3;
    CANCEL = 4;
    END = 5;
    TIMEOUT = 6;
  }
  CallAction action = 4;
  enum CallType {
    AUDIO = 0;
    VIDEO = 1;
  }
  CallType type = 5;
  int64 timestamp = 6;
  int32 duration = 7;
}

// ===============================
// 💠 自定义结构化消息
// ===============================
message CustomContent {
  string custom_type = 1;
  string json_payload = 2;
}

// ===============================
// 😄 表情消息
// ===============================
message EmojiContent {
  EmojiType emoji = 1;
  string custom_emoji_url = 2;
}

// ===============================
// ⛔ 撤回消息
// ===============================
message RevokeContent {
  string target_message_id = 1;
  string operator_id = 2;
  int64 revoke_time = 3;
}

// ===============================
// 📤 转发消息
// ===============================
message ForwardContent {
  string original_message_id = 1;
  string original_sender_id = 2;
  common.ContentType original_type = 3;
  string summary = 4;
}

// ===============================
// 📌 引用回复消息
// ===============================
message QuoteContent {
  string quoted_message_id = 1;
  string quoted_content_preview = 2;
  string quote_text = 3;
}

// ===============================
// 🌐 HTML 卡片
// ===============================
message HtmlContent {
  string title = 1;
  string url = 2;
  string preview = 3;
}

// ===============================
// 📞 VOIP 通话记录
// ===============================
message VoipContent {
  string caller_id = 1;
  string callee_id = 2;
  int64 duration = 3;
  string status = 4;
}

// ===============================
// 🔔 通知消息
// ===============================
message NotificationContent {
  string title = 1;
  string body = 2;
  map<string, string> metadata = 3;
}

// ===============================
// ⚙️ 系统消息
// ===============================
message SystemContent {
  string content = 1;
  string code = 2;
}

// ===============================
// ⏰ 提醒事项
// ===============================
message ReminderContent {
  string text = 1;
  int64 remind_at = 2;
}


// ===============================
// 👪 群组事件
// ===============================
message GroupEventContent {
  string group_id = 1;
  string event = 2;
  string operator_id = 3;
}

// ===============================
// 📇 名片消息
// ===============================
message ContactCardContent {
  string target_id = 1;
  string display_name = 2;
  string avatar_url = 3;
  string card_type = 4;
}

// ===============================
// 📊 投票消息
// ===============================
message VoteContent {
  string topic = 1;
  repeated string options = 2;
  map<string, int32> result = 3;
  bool multi_choice = 4;
}

// ===============================
// 💰 红包消息
// ===============================
message RedEnvelopeContent {
  string sender_id = 1;
  int32 amount = 2;
  string blessing = 3;
  bool claimed = 4;
}

// ======================================
// ✂️ Segment - 消息段结构（用于复合内容）
// ======================================
// 表示一条消息中的一个独立段（如文本段、图片段等），支持排序、编辑、标记等
message Segment {
  MessageContent body = 1;                // 消息段内容（如文本、图片等，使用 oneof 封装）

  string segment_id = 2;                  // 段唯一标识（客户端生成或服务端补全）
  uint64 seq_in_msg = 3;                  // 消息内顺序编号（用于前端渲染排序）

  bool edited = 4;                        // 是否为编辑后的段落（true 表示被修改）
  bool visible = 5;                       // 是否允许客户端渲染该段（false 可用于隐藏草稿等）

  map<string, string> metadata = 6;       // 通用扩展字段（以字符串键值对存储 JSON 扁平数据）
}
