syntax = "proto3";

package protocol.common;

// ======================================
// 💬 消息类型枚举（用于标记主消息类型）
// ======================================
// 每条消息将根据其主内容赋予一个主类型，便于前端渲染和后端分类处理。
// 注意：具体内容仍以 MessageContent 的 oneof 实体为准，MessageType 仅为索引分类用途。
enum MessageType {
  UNKNOWN = 0;          // 未知类型：默认值，用于防御性处理或解析失败情况
  TEXT = 1;             // 文本消息：纯文本内容
  IMAGE = 2;            // 图片消息：包含图片地址、尺寸、缩略图等信息
  AUDIO = 3;            // 音频消息：语音聊天或语音留言
  VIDEO = 4;            // 视频消息：播放地址、封面图、时长等
  HTML = 5;             // HTML 富文本消息：用于结构化卡片、网页链接等
  LOCATION = 6;         // 位置消息：经纬度、地址描述等
  FILE = 7;             // 文件消息：支持任意文件格式，如 PDF、Word、ZIP 等
  EMOJI = 8;            // 表情消息：标准 emoji 或自定义动态/静态表情
  QUOTE = 9;            // 引用消息：引用历史消息的内容并附加回复
  AV_CALL = 10;         // 音视频通话信令：如邀请、接听、挂断等
  VOIP = 11;            // VOIP 通话记录：用于保存通话日志
  NOTIFICATION = 12;    // 通知消息：系统推送提示、公告等
  SYSTEM = 13;          // 系统消息：如封号、强制下线、服务器维护通知等
  REMINDER = 14;        // 提醒消息：如代办事项、日程提醒等
  FRIEND_EVENT = 15;    // 好友事件：加好友、被删除、拉黑等事件
  GROUP_EVENT = 16;     // 群组事件：如被踢出群、群解散、管理员变更等
  REVOKE = 17;          // 消息撤回：通知客户端某条消息已被撤回
  FORWARD = 18;         // 转发消息：引用其他消息的复用/转发版本

  // 可选扩展类型（根据业务需要添加）
  CONTACT_CARD = 19;    // 名片消息：用户或群的联系人分享
  VOTE = 20;            // 投票消息：包含投票标题、选项、结果等信息
  RED_ENVELOPE = 21;    // 红包消息：用于节日、福利等场景

  CUSTOM = 100;         // 自定义消息：开发者自定义结构，通常以 JSON 承载
}
enum ChatTargetType{
  UN_KNOWN = 0;          // 未知类型：默认值，用于防御性处理或解析失败情况
  GROUP=1;
  Single=2;
}