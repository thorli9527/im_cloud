syntax = "proto3";

package protocol;

// ======================================
// 💬 消息类型枚举（用于标记主消息类型）
// ======================================
// 每条消息将根据其主内容赋予一个主类型，便于前端渲染和后端分类处理。
// 注意：具体内容仍以 MessageContent 的 oneof 实体为准，MessageType 仅为索引分类用途。
enum MessageType {
  UNKNOWN = 0;     // 未知类型，默认值（用于防御性处理或解析失败情况）

  TEXT = 1;        // 文本消息：纯文本信息
  IMAGE = 2;       // 图片消息：包含图片地址、尺寸、缩略图等信息
  AUDIO = 3;       // 音频消息：支持语音聊天、语音留言
  VIDEO = 4;       // 视频消息：含播放地址、封面图、时长等

  LOCATION = 5;    // 位置消息：发送位置信息，含经纬度、地址描述等
  FILE = 6;        // 文件消息：发送任意文件（PDF、Word、压缩包等）

  AV_CALL = 7;     // 音视频通话控制消息（邀请、接受、挂断等信令）

  NOTIFICATION = 8; // 通知类消息：用于系统推送提示、非交互型提醒
  SYSTEM = 9;       // 系统消息：如服务器维护通知、封号处理等
  REMINDER = 10;    // 提醒类消息：代办事项、日程提醒等
  VOIP = 11;        // 网络电话消息：用于记录 VOIP 通话日志（与 AV_CALL 区分）

  CUSTOM = 12;      // 自定义消息：开发者自定义格式，通常通过 json_payload 承载结构化内容

  EMOJI = 13;       // 表情消息：标准或自定义表情（含静态、动态、自定义图像等）

  SYSTEM_EVENT = 14; // 系统事件消息：用于传递后端逻辑事件，如“被移出群”、“群被解散”等状态变化

  REVOKE = 15;       // 撤回消息：用于通知客户端撤回了哪条消息

  FORWARD = 16;      // 转发消息：表示此消息是由其他消息内容构建而成的引用/复制

  QUOTE = 17;        // 引用消息：对某条历史消息的引用+新内容，支持多段组合回复
}
