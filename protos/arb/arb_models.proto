syntax = "proto3";

package rpc_arb_models;

// =====================
// 枚举：分片节点状态定义
// =====================
enum ShardState {
  UNSPECIFIED = 0;   // 未指定状态（默认值）
  NORMAL = 1;        // 分片正常运行中
  MIGRATING = 2;     // 正在迁移（目标节点未确认接管）
  FAILED = 3;        // 异常（节点宕机或下线，待仲裁）
  PREPARING = 4;     // 接管准备阶段
  READY = 5;         // 可切换 owner
  OFFLINE = 6;       // 节点主动下线，该分片不再调度
  PREPARING_OFFLINE = 7; // 节点准备下线，等待数据迁移或状态确认
}

// =====================
// 通用结构体定义
// =====================

// 基础请求，仅包含节点地址
message BaseRequest {
  string node_addr = 1; // 节点地址（如 192.168.1.10:9000）
}

// 通用响应结构（统一 success + message）
message CommonResp {
  bool success = 1;
  string message = 2;
}

// ============================
// 分片节点元信息
// ============================
message ShardNodeInfo {
  string node_addr = 1;             // 所属节点地址
  uint64 version = 2;               // 当前版本号（用于 CAS 检查）
  ShardState state = 3;             // 当前状态
  uint64 last_update_time = 4;      // 最后更新时间戳（毫秒）
}


// ============================
// 请求结构：更新分片状态
// ============================
message UpdateShardStateRequest {
  string node_addr = 1;
  ShardState new_state = 2;
}


message ListShardNodesResponse {
  repeated ShardNodeInfo nodes = 1;
}

message ListAllNodesResponse {
  repeated ShardNodeInfo nodes = 1;
}
