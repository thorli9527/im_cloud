syntax = "proto3";

package protocol.arb_models;
import "common.proto";
// =====================
// 枚举：分片节点状态定义
// =====================
enum ShardState {
  UNSPECIFIED = 0;        // 默认值，表示未明确设置状态
  REGISTERED = 1;         // 节点已注册，等待分片分配（未调度）
  NORMAL = 2;             // 分片正常运行中（已调度完成）
  PREPARING = 3;          // 正在准备接管分片（ current 切换 snapshot）
  MIGRATING = 4;          // 正在迁移（snapshot 迁移当前节点数据）
  SYNCING = 5;            // 正在同步数据（snapshot 迁移其它节点数据）
  READY = 6;              // 接管准备完成，可切换 owner
  FAILED = 7;             // 节点异常、下线、心跳失联等状态
  OFFLINE = 8;            // 节点主动下线，分片不可调度
  PREPARING_OFFLINE = 9;  // 节点准备下线，等待迁移完成
}
// 节点类型
enum NodeType{
  GROUP_NODE = 0;
  SOCKET_NODE = 1;
  ALL = 2;
}

// =====================
// 通用结构体定义
// =====================
// 基础请求，仅包含节点地址
message BaseRequest {
  string node_addr = 1;   // 节点地址（如 192.168.1.10:9000）
  NodeType node_type = 2; // 节点类型
}


// =====================
// 通用结构体定义
// =====================
// 基础请求，仅包含节点地址
message RegRequest {
  string node_addr = 1;   // 节点地址（如 192.168.1.10:9000）
  NodeType node_type = 2; // 节点类型
  optional string kafka_addr = 3;  // Kafka 地址（可选，用于消息队列）
}

// =====================
// 通用结构体定义
// =====================
// 基础请求，仅包含节点地址
message QueryNodeReq {
  NodeType node_type = 1; // 节点类型
}



// ============================
// 分片节点元信息
// ============================
message NodeInfo {
  string node_addr = 1;             // 所属节点地址
  uint64 version = 2;               // 当前版本号（用于 CAS 检查）
  ShardState state = 3;             // 当前状态
  uint64 last_update_time = 4;      // 最后更新时间戳（毫秒）
  int32 total = 6;                   // 分片总数
  NodeType node_type = 7;           // 节点类型
  optional string kafka_addr = 8;   // Kafka 地址（可选，用于消息传递）
}
//同步数据请求类型
enum SyncDataType {
  GROUP_ADD = 0;
  GROUP_DEL = 1;
  GROUP_UPDATE = 2;
  GROUP_MEMBER_ADD = 3;
  GROUP_MEMBER_DEL = 4;
  GROUP_MEMBER_UPDATE = 5;
}
message MemberRef {
  string id = 1;                        // 用户ID
  common.GroupRoleType role = 3;         // 成员角色
}
message SyncListGroup {
  string group_id = 1;            // 群组ID列表
  repeated MemberRef members = 2;        // 成员列表
  repeated string on_line_ids = 3; // 在线成员
}

// ============================
// 请求结构：更新分片状态
// ============================
message UpdateShardStateRequest {
  string node_addr = 1;
  ShardState new_state = 2;
}


message ListShardNodesResponse {
  repeated NodeInfo nodes = 1;
}

message ListAllNodesResponse {
  repeated NodeInfo nodes = 1;
}
