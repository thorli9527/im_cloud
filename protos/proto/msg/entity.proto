syntax = "proto3";

package protocol.entity;
import "msg/message.proto";  // 聊天消息结构

// ======================================
// 📦 实体消息协议定义文件
// ======================================
// 本文件定义了系统中的核心实体消息结构，包括用户消息和群组消息
// 
// 主要包含：
// 1. UserMsg - 用户消息结构（单聊消息）
// 2. GroupMsg - 群组消息结构（群聊消息）
// ======================================

// ======================================
// 👤 用户消息结构（单聊消息）
// ======================================
// 用于表示用户之间的单聊消息，包含完整的消息内容和状态信息
message UserMsg {
  optional uint64 message_id = 1;        // 当前消息的唯一 ID，用于追踪、ACK 等

  // 所属商户
  string agent_id = 2;          // 商户ID：消息所属的业务实体标识

  // 所属用户 ID
  string from = 3;              // 发送者用户ID：消息的发送方

  // 目标 ID
  string to = 4;                // 接收者用户ID：消息的接收方

  // 消息复合内容（支持结构化消息段）
  repeated message.Segment content = 5; // 消息内容：支持多段复合内容（文本+图片等）

  // 创建时间（Unix 秒时间戳）
  int64 created_time = 6;       // 消息创建时间：消息首次创建的时间戳

  // 最后更新时间（Unix 秒时间戳）
  int64 updated_time = 7;       // 消息更新时间：消息最后修改的时间戳

  // 是否被撤回
  bool revoked = 8;             // 撤回状态：true表示消息已被撤回

  // 是否为系统消息
  bool is_system = 9;           // 系统消息标识：true表示系统自动生成的消息

  // 是否已发送到 MQ
  bool sync_mq_status = 10;     // MQ同步状态：true表示已同步到消息队列

  // 是否已送达客户端
  bool delivered = 11;          // 送达状态：true表示消息已送达接收方客户端

  // 阅读时间戳（可选）
  int64 read_time = 12;         // 阅读时间：接收方阅读消息的时间戳
}

// ======================================
// 👥 群组消息结构（群聊消息）
// ======================================
// 用于表示群组中的群聊消息，包含完整的消息内容和群组特有信息
message GroupMsg {
  optional uint64 message_id = 1;        // 当前消息的唯一 ID，用于追踪、ACK 等

  // 所属商户
  string agent_id = 2;          // 商户ID：消息所属的业务实体标识

  // 所属群组 ID
  string to = 3;                // 群组ID：消息所属的群组标识

  // 发送者用户 ID
  string from = 4;              // 发送者用户ID：消息的发送方

  // 消息复合内容（支持结构化消息段）
  repeated message.Segment content = 5; // 消息内容：支持多段复合内容（文本+图片等）

  // 创建时间（Unix 秒时间戳）
  int64 create_time = 6;        // 消息创建时间：消息首次创建的时间戳

  // 最后更新时间（Unix 秒时间戳）
  int64 update_time = 7;        // 消息更新时间：消息最后修改的时间戳

  // 群内顺序号（用于顺序拉取）
  int64 seq = 8;                // 群内序号：群组内消息的顺序编号，用于消息排序

  // 是否已发送到 MQ
  bool sync_mq_status = 9;      // MQ同步状态：true表示已同步到消息队列

  // 是否被撤回
  bool revoked = 10;            // 撤回状态：true表示消息已被撤回

  // 是否为系统消息（可用于区分人工发送和自动提示）
  bool is_system = 11;          // 系统消息标识：true表示系统自动生成的消息
}
