// This file is @generated by prost-build.
/// *
/// 创建群组请求
#[derive(serde::Serialize, serde::Deserialize, utoipa::ToSchema)]
#[serde(rename_all = "camelCase")]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct CreateGroupReq {
    /// 可选自定义群ID
    #[prost(string, tag = "1")]
    pub group_id: ::prost::alloc::string::String,
    /// 群名称
    #[prost(string, tag = "2")]
    pub name: ::prost::alloc::string::String,
    /// 群头像URL
    #[prost(string, tag = "3")]
    pub avatar: ::prost::alloc::string::String,
    /// 群简介
    #[prost(string, tag = "4")]
    pub description: ::prost::alloc::string::String,
    /// 创建者用户ID
    #[prost(string, tag = "5")]
    pub creator_id: ::prost::alloc::string::String,
    /// 初始成员用户ID列表
    #[prost(string, repeated, tag = "6")]
    pub member_ids: ::prost::alloc::vec::Vec<::prost::alloc::string::String>,
    /// 指定群主ID（可与创建者不同）
    #[prost(string, tag = "7")]
    pub owner_id: ::prost::alloc::string::String,
    /// 是否需要审核加入
    #[prost(bool, tag = "8")]
    pub need_approval: bool,
    /// 是否允许通过搜索加入
    #[prost(bool, tag = "9")]
    pub allow_search: bool,
}
/// *
/// 解散群组请求
#[derive(serde::Serialize, serde::Deserialize, utoipa::ToSchema)]
#[serde(rename_all = "camelCase")]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct DestroyGroupReq {
    /// 群组ID
    #[prost(string, tag = "1")]
    pub group_id: ::prost::alloc::string::String,
}
/// *
/// 更新群组信息请求
#[derive(serde::Serialize, serde::Deserialize, utoipa::ToSchema)]
#[serde(rename_all = "camelCase")]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct UpdateGroupInfoReq {
    /// 群组ID
    #[prost(string, tag = "1")]
    pub group_id: ::prost::alloc::string::String,
    /// 群名称
    #[prost(string, tag = "2")]
    pub name: ::prost::alloc::string::String,
    /// 群头像
    #[prost(string, tag = "3")]
    pub avatar: ::prost::alloc::string::String,
    /// 群简介
    #[prost(string, tag = "4")]
    pub description: ::prost::alloc::string::String,
    /// 群公告
    #[prost(string, tag = "5")]
    pub notice: ::prost::alloc::string::String,
    /// 群标签（英文逗号分隔）
    #[prost(string, tag = "6")]
    pub tags: ::prost::alloc::string::String,
    /// 加群权限
    #[prost(enumeration = "super::common::JoinPermission", tag = "7")]
    pub join_permission: i32,
    /// 是否可被搜索
    #[prost(bool, tag = "8")]
    pub allow_search: bool,
    /// 验证方式
    #[prost(enumeration = "super::common::JoinQuestionType", tag = "9")]
    pub join_question_mode: i32,
    /// 验证问题
    #[prost(string, repeated, tag = "10")]
    pub join_questions: ::prost::alloc::vec::Vec<::prost::alloc::string::String>,
    /// 答案
    #[prost(string, tag = "11")]
    pub join_question_answer: ::prost::alloc::string::String,
    /// 邀请码
    #[prost(string, tag = "12")]
    pub join_code: ::prost::alloc::string::String,
    /// 验证码校验值
    #[prost(string, tag = "13")]
    pub join_code_answer: ::prost::alloc::string::String,
}
/// *
/// 获取群组信息请求
#[derive(serde::Serialize, serde::Deserialize, utoipa::ToSchema)]
#[serde(rename_all = "camelCase")]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct GetGroupInfoReq {
    /// 群组ID
    #[prost(string, tag = "1")]
    pub group_id: ::prost::alloc::string::String,
}
/// *
/// 获取群组信息响应
#[derive(serde::Serialize, serde::Deserialize, utoipa::ToSchema)]
#[serde(rename_all = "camelCase")]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct GetGroupInfoRep {
    /// 群ID
    #[prost(string, tag = "1")]
    pub group_id: ::prost::alloc::string::String,
    /// 名称
    #[prost(string, tag = "2")]
    pub name: ::prost::alloc::string::String,
    /// 头像URL
    #[prost(string, tag = "3")]
    pub avatar: ::prost::alloc::string::String,
    /// 简介
    #[prost(string, tag = "4")]
    pub description: ::prost::alloc::string::String,
    /// 创建者UID
    #[prost(string, tag = "5")]
    pub creator_id: ::prost::alloc::string::String,
    /// 群成员信息列表
    #[prost(message, repeated, tag = "6")]
    pub members: ::prost::alloc::vec::Vec<super::common::GroupMemberEntity>,
}
/// *
/// 添加成员请求
#[derive(serde::Serialize, serde::Deserialize, utoipa::ToSchema)]
#[serde(rename_all = "camelCase")]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct AddMemberReq {
    /// 群ID
    #[prost(string, tag = "1")]
    pub group_id: ::prost::alloc::string::String,
    /// 成员信息
    #[prost(message, repeated, tag = "2")]
    pub members: ::prost::alloc::vec::Vec<super::common::GroupMemberEntity>,
}
/// *
/// 移除成员请求
#[derive(serde::Serialize, serde::Deserialize, utoipa::ToSchema)]
#[serde(rename_all = "camelCase")]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct RemoveMemberReq {
    /// 群ID
    #[prost(string, tag = "1")]
    pub group_id: ::prost::alloc::string::String,
    /// 用户UID列表
    #[prost(string, repeated, tag = "2")]
    pub uids: ::prost::alloc::vec::Vec<::prost::alloc::string::String>,
}
/// *
/// 用户主动退出群组请求
#[derive(serde::Serialize, serde::Deserialize, utoipa::ToSchema)]
#[serde(rename_all = "camelCase")]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ExitGroupReq {
    /// 群ID
    #[prost(string, tag = "1")]
    pub group_id: ::prost::alloc::string::String,
    /// 当前用户UID
    #[prost(string, tag = "2")]
    pub uid: ::prost::alloc::string::String,
}
/// *
/// 更改群成员角色请求
#[derive(serde::Serialize, serde::Deserialize, utoipa::ToSchema)]
#[serde(rename_all = "camelCase")]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ChangeMemberRoleReq {
    #[prost(string, tag = "1")]
    pub group_id: ::prost::alloc::string::String,
    #[prost(string, tag = "2")]
    pub uid: ::prost::alloc::string::String,
    /// 新角色
    #[prost(enumeration = "super::common::GroupRoleType", tag = "3")]
    pub role: i32,
}
/// *
/// 禁言/取消禁言成员
#[derive(serde::Serialize, serde::Deserialize, utoipa::ToSchema)]
#[serde(rename_all = "camelCase")]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct MuteMemberReq {
    #[prost(string, tag = "1")]
    pub group_id: ::prost::alloc::string::String,
    #[prost(string, tag = "2")]
    pub uid: ::prost::alloc::string::String,
    /// true=禁言，false=取消禁言
    #[prost(bool, tag = "3")]
    pub status: bool,
}
/// *
/// 修改成员别名请求
#[derive(serde::Serialize, serde::Deserialize, utoipa::ToSchema)]
#[serde(rename_all = "camelCase")]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ChangeMemberAliasReq {
    #[prost(string, tag = "1")]
    pub group_id: ::prost::alloc::string::String,
    #[prost(string, tag = "2")]
    pub uid: ::prost::alloc::string::String,
    #[prost(string, tag = "3")]
    pub alias: ::prost::alloc::string::String,
}
/// *
/// 转让群主请求
#[derive(serde::Serialize, serde::Deserialize, utoipa::ToSchema)]
#[serde(rename_all = "camelCase")]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct TransferGroupOwnershipReq {
    #[prost(string, tag = "1")]
    pub group_id: ::prost::alloc::string::String,
    #[prost(string, tag = "2")]
    pub new_owner_uid: ::prost::alloc::string::String,
}
/// *
/// 用户上线请求
#[derive(serde::Serialize, serde::Deserialize, utoipa::ToSchema)]
#[serde(rename_all = "camelCase")]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct OnlineReq {
    /// 用户ID
    #[prost(string, tag = "1")]
    pub uid: ::prost::alloc::string::String,
    /// 所属群组ID
    #[prost(string, tag = "2")]
    pub group_id: ::prost::alloc::string::String,
}
/// *
/// 用户离线请求
#[derive(serde::Serialize, serde::Deserialize, utoipa::ToSchema)]
#[serde(rename_all = "camelCase")]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct OfflineReq {
    #[prost(string, tag = "1")]
    pub uid: ::prost::alloc::string::String,
    #[prost(string, tag = "2")]
    pub group_id: ::prost::alloc::string::String,
}
/// *
/// 获取在线成员请求（分页）
#[derive(serde::Serialize, serde::Deserialize, utoipa::ToSchema)]
#[serde(rename_all = "camelCase")]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct GetOnlineMembersReq {
    /// 群ID
    #[prost(string, tag = "1")]
    pub group_id: ::prost::alloc::string::String,
    /// 页码（从1开始）
    #[prost(int32, tag = "2")]
    pub page: i32,
    /// 每页条数
    #[prost(int32, tag = "3")]
    pub page_size: i32,
}
/// *
/// 获取在线成员响应
#[derive(serde::Serialize, serde::Deserialize, utoipa::ToSchema)]
#[serde(rename_all = "camelCase")]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct GetOnlineMembersResp {
    /// 在线UID列表
    #[prost(string, repeated, tag = "1")]
    pub uids: ::prost::alloc::vec::Vec<::prost::alloc::string::String>,
    /// 在线总人数
    #[prost(int32, tag = "2")]
    pub total_count: i32,
    /// 是否成功
    #[prost(bool, tag = "3")]
    pub success: bool,
    /// 错误提示
    #[prost(string, tag = "4")]
    pub message: ::prost::alloc::string::String,
}
/// *
/// 获取所有成员请求（分页）
#[derive(serde::Serialize, serde::Deserialize, utoipa::ToSchema)]
#[serde(rename_all = "camelCase")]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct GetMembersReq {
    #[prost(string, tag = "1")]
    pub group_id: ::prost::alloc::string::String,
    #[prost(int32, tag = "2")]
    pub page: i32,
    #[prost(int32, tag = "3")]
    pub page_size: i32,
}
/// *
/// 获取所有成员响应
#[derive(serde::Serialize, serde::Deserialize, utoipa::ToSchema)]
#[serde(rename_all = "camelCase")]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct GetMembersRep {
    /// 成员UID列表
    #[prost(string, repeated, tag = "1")]
    pub uids: ::prost::alloc::vec::Vec<::prost::alloc::string::String>,
    /// 总人数
    #[prost(int32, tag = "2")]
    pub total_count: i32,
    #[prost(bool, tag = "3")]
    pub success: bool,
    #[prost(string, tag = "4")]
    pub message: ::prost::alloc::string::String,
}
